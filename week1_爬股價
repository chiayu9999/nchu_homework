{"cells":[{"cell_type":"markdown","metadata":{"id":"suJEI5F3kNGA"},"source":["# 股市資料蒐集、爬蟲\n","\n"]},{"cell_type":"markdown","source":["## 取得證交所資料\n","1. 進入證交所網址：https://www.twse.com.tw/zh/index.html\n","2. 使用開發者模式取得請求資料網址"],"metadata":{"id":"A0UDC9wQIAsP"}},{"cell_type":"markdown","source":["### 匯入套件"],"metadata":{"id":"qr8JeDTFIG92"}},{"cell_type":"code","source":["# 發送 HTTP 請求以獲取網路上的資料\n","import requests\n","\n","# 用來處理和分析結構化數據\n","import pandas as pd\n","\n","# 用來處理時間\n","import datetime as dt"],"metadata":{"id":"0mSrUBMlIBaW","executionInfo":{"status":"ok","timestamp":1757774522328,"user_tz":-480,"elapsed":16,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}}},"execution_count":51,"outputs":[]},{"cell_type":"markdown","source":["### 取得證交所上市公司個股日成交資訊"],"metadata":{"id":"_IxCZcFIIMBQ"}},{"cell_type":"code","source":["# \"台積電\"股票代號\n","stock_id = '2330'\n","\n","# 獲取今天的日期（型別：str）\n","# date = dt.date.today().strftime(\"%Y%m%d\")\n","date = '20250912'\n","\n","print('今日日期：', date)\n","\n","# 取得證交所網站資料，帶入網址參數 date：時間，stock_id：股票代號\n","# https://www.twse.com.tw/rwd/zh/afterTrading/STOCK_DAY?date=20240918&stockNo=2303\n","stock_data = requests.get(f'https://www.twse.com.tw/rwd/zh/ \\\n","            afterTrading/STOCK_DAY?date={date}&stockNo={stock_id}')\n","\n","# 將結果轉換 JSON 格式\n","json_data = stock_data.json()\n","\n","# 將 JSON 格式轉換爲 Dataframe 格式，\n","# 方便在 Python 中處理結構化資料\n","df = pd.DataFrame(data=json_data['data'],\n","                  columns=json_data['fields'])\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"PMUwLq3NIGW6","executionInfo":{"status":"ok","timestamp":1757774523135,"user_tz":-480,"elapsed":808,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}},"outputId":"ac1637e5-ce57-4ac7-affc-28beb84155a1"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["今日日期： 20250912\n"]},{"output_type":"execute_result","data":{"text/plain":["          日期        成交股數            成交金額       開盤價       最高價       最低價  \\\n","0  114/09/01  23,022,319  26,647,241,918  1,150.00  1,165.00  1,145.00   \n","1  114/09/02  14,994,018  17,436,038,175  1,170.00  1,175.00  1,155.00   \n","2  114/09/03  20,211,322  23,350,634,915  1,155.00  1,160.00  1,145.00   \n","3  114/09/04  25,311,450  29,560,102,956  1,170.00  1,175.00  1,160.00   \n","4  114/09/05  27,931,124  32,835,192,457  1,175.00  1,180.00  1,170.00   \n","5  114/09/08  28,393,035  33,731,539,720  1,195.00  1,195.00  1,180.00   \n","6  114/09/09  35,720,097  42,775,822,699  1,195.00  1,200.00  1,190.00   \n","7  114/09/10  43,516,678  53,209,559,355  1,220.00  1,230.00  1,215.00   \n","8  114/09/11  34,811,140  43,495,621,610  1,255.00  1,260.00  1,235.00   \n","9  114/09/12  28,224,895  35,417,505,350  1,255.00  1,260.00  1,250.00   \n","\n","        收盤價    漲跌價差    成交筆數  \n","0  1,165.00   +5.00  41,416  \n","1  1,160.00   -5.00  24,784  \n","2  1,160.00    0.00  29,992  \n","3  1,160.00    0.00  22,577  \n","4  1,180.00  +20.00  24,609  \n","5  1,180.00    0.00  35,672  \n","6  1,200.00  +20.00  46,420  \n","7  1,225.00  +25.00  82,407  \n","8  1,240.00  +15.00  68,103  \n","9  1,260.00  +20.00  49,823  "],"text/html":["\n","  <div id=\"df-94e74978-0278-4d49-879b-686b932f1845\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>日期</th>\n","      <th>成交股數</th>\n","      <th>成交金額</th>\n","      <th>開盤價</th>\n","      <th>最高價</th>\n","      <th>最低價</th>\n","      <th>收盤價</th>\n","      <th>漲跌價差</th>\n","      <th>成交筆數</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>114/09/01</td>\n","      <td>23,022,319</td>\n","      <td>26,647,241,918</td>\n","      <td>1,150.00</td>\n","      <td>1,165.00</td>\n","      <td>1,145.00</td>\n","      <td>1,165.00</td>\n","      <td>+5.00</td>\n","      <td>41,416</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>114/09/02</td>\n","      <td>14,994,018</td>\n","      <td>17,436,038,175</td>\n","      <td>1,170.00</td>\n","      <td>1,175.00</td>\n","      <td>1,155.00</td>\n","      <td>1,160.00</td>\n","      <td>-5.00</td>\n","      <td>24,784</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>114/09/03</td>\n","      <td>20,211,322</td>\n","      <td>23,350,634,915</td>\n","      <td>1,155.00</td>\n","      <td>1,160.00</td>\n","      <td>1,145.00</td>\n","      <td>1,160.00</td>\n","      <td>0.00</td>\n","      <td>29,992</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>114/09/04</td>\n","      <td>25,311,450</td>\n","      <td>29,560,102,956</td>\n","      <td>1,170.00</td>\n","      <td>1,175.00</td>\n","      <td>1,160.00</td>\n","      <td>1,160.00</td>\n","      <td>0.00</td>\n","      <td>22,577</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>114/09/05</td>\n","      <td>27,931,124</td>\n","      <td>32,835,192,457</td>\n","      <td>1,175.00</td>\n","      <td>1,180.00</td>\n","      <td>1,170.00</td>\n","      <td>1,180.00</td>\n","      <td>+20.00</td>\n","      <td>24,609</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>114/09/08</td>\n","      <td>28,393,035</td>\n","      <td>33,731,539,720</td>\n","      <td>1,195.00</td>\n","      <td>1,195.00</td>\n","      <td>1,180.00</td>\n","      <td>1,180.00</td>\n","      <td>0.00</td>\n","      <td>35,672</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>114/09/09</td>\n","      <td>35,720,097</td>\n","      <td>42,775,822,699</td>\n","      <td>1,195.00</td>\n","      <td>1,200.00</td>\n","      <td>1,190.00</td>\n","      <td>1,200.00</td>\n","      <td>+20.00</td>\n","      <td>46,420</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>114/09/10</td>\n","      <td>43,516,678</td>\n","      <td>53,209,559,355</td>\n","      <td>1,220.00</td>\n","      <td>1,230.00</td>\n","      <td>1,215.00</td>\n","      <td>1,225.00</td>\n","      <td>+25.00</td>\n","      <td>82,407</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>114/09/11</td>\n","      <td>34,811,140</td>\n","      <td>43,495,621,610</td>\n","      <td>1,255.00</td>\n","      <td>1,260.00</td>\n","      <td>1,235.00</td>\n","      <td>1,240.00</td>\n","      <td>+15.00</td>\n","      <td>68,103</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>114/09/12</td>\n","      <td>28,224,895</td>\n","      <td>35,417,505,350</td>\n","      <td>1,255.00</td>\n","      <td>1,260.00</td>\n","      <td>1,250.00</td>\n","      <td>1,260.00</td>\n","      <td>+20.00</td>\n","      <td>49,823</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94e74978-0278-4d49-879b-686b932f1845')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94e74978-0278-4d49-879b-686b932f1845 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94e74978-0278-4d49-879b-686b932f1845');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2c0a5e80-c588-4bf0-841b-39a98771aa0d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2c0a5e80-c588-4bf0-841b-39a98771aa0d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2c0a5e80-c588-4bf0-841b-39a98771aa0d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_5c5d01a6-b63c-467c-9b2e-f2a590eac8e9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5c5d01a6-b63c-467c-9b2e-f2a590eac8e9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"\\u65e5\\u671f\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"114/09/11\",\n          \"114/09/02\",\n          \"114/09/08\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6210\\u4ea4\\u80a1\\u6578\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"34,811,140\",\n          \"14,994,018\",\n          \"28,393,035\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6210\\u4ea4\\u91d1\\u984d\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"43,495,621,610\",\n          \"17,436,038,175\",\n          \"33,731,539,720\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u958b\\u76e4\\u50f9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1,150.00\",\n          \"1,170.00\",\n          \"1,220.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6700\\u9ad8\\u50f9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"1,175.00\",\n          \"1,200.00\",\n          \"1,165.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6700\\u4f4e\\u50f9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"1,235.00\",\n          \"1,155.00\",\n          \"1,190.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6536\\u76e4\\u50f9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1,165.00\",\n          \"1,160.00\",\n          \"1,240.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6f32\\u8dcc\\u50f9\\u5dee\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"+5.00\",\n          \"-5.00\",\n          \"+15.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6210\\u4ea4\\u7b46\\u6578\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"68,103\",\n          \"24,784\",\n          \"35,672\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["### 抓取特定某段時間區間 9/10~9/15\n","為了比較時間區間，必須要把「日期」欄位轉圜為 Pandas 中的 datetime 格式"],"metadata":{"id":"GAhwTy2iI4oP"}},{"cell_type":"code","source":["def convert_minguo_to_ad(date_str):\n","    # 113/09/10 透過「/」分割成清單 [113, 09, 10]\n","    # 分配給變數 year=113, month=09, day=10\n","    year, month, day = date_str.split('/')\n","    ad_year = int(year) + 1911  # 將民國年轉換為西元年\n","    return f\"{ad_year}/{month}/{day}\"\n","\n","# 所有民國日期都轉西元日期 e.g.113/09/10 -> 2024/09/10\n","df['日期'] = df['日期'].apply(convert_minguo_to_ad)\n","\n","# 轉換為 pandas 中的 datetime 格式\n","df['日期'] = pd.to_datetime(df['日期'], format='%Y/%m/%d')\n","\n","start_date = '2025/09/08'\n","end_date = '2025/09/12'\n","\n","# 篩選日期\n","filtered_df = df[(df['日期'] >= start_date) & (df['日期'] <= end_date)]\n","\n","print(filtered_df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p5_8iGfAI45M","executionInfo":{"status":"ok","timestamp":1757774523143,"user_tz":-480,"elapsed":22,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}},"outputId":"225ade5e-8d86-4fdf-be61-4dfe62ff1444"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["          日期        成交股數            成交金額       開盤價       最高價       最低價  \\\n","5 2025-09-08  28,393,035  33,731,539,720  1,195.00  1,195.00  1,180.00   \n","6 2025-09-09  35,720,097  42,775,822,699  1,195.00  1,200.00  1,190.00   \n","7 2025-09-10  43,516,678  53,209,559,355  1,220.00  1,230.00  1,215.00   \n","8 2025-09-11  34,811,140  43,495,621,610  1,255.00  1,260.00  1,235.00   \n","9 2025-09-12  28,224,895  35,417,505,350  1,255.00  1,260.00  1,250.00   \n","\n","        收盤價    漲跌價差    成交筆數  \n","5  1,180.00    0.00  35,672  \n","6  1,200.00  +20.00  46,420  \n","7  1,225.00  +25.00  82,407  \n","8  1,240.00  +15.00  68,103  \n","9  1,260.00  +20.00  49,823  \n"]}]},{"cell_type":"markdown","source":["### 取得連續月份資料\n","以個股本益比為例"],"metadata":{"id":"hcQjlqOiK-N-"}},{"cell_type":"code","source":["# 設定查找時間\n","date_list = ['20250701', '20250801', '20250901']\n","\n","all_df = pd.DataFrame()\n","\n","# 使用迴圈抓取連續月份資料\n","for date in date_list:\n","    # 取得證交所網站資料，帶入網址參數 date：時間，stock_id：股票代號\n","    # https://www.twse.com.tw/rwd/zh/afterTrading/STOCK_DAY?date=20240918&stockNo=2303\n","    # https://www.twse.com.tw/rwd/zh/afterTrading/BWIBBU?date=20240303&stockNo=2303\n","    url = f'https://www.twse.com.tw/rwd/zh/afterTrading/\\\n","      BWIBBU?date={date}&stockNo={stock_id}'\n","\n","    try:\n","\n","        # 取得證交所網站資\n","        stock_data = requests.get(url)\n","\n","        # 將結果轉換 JSON 格式\n","        json_data = stock_data.json()\n","\n","        # 將 JSON 格式轉換爲 Dataframe 格式，\n","        # 方便在 Python 中處理結構化資料\n","        df = pd.DataFrame(data=json_data['data'],\n","                          columns=json_data['fields'])\n","\n","        # 添加新數據\n","        all_df = pd.concat([all_df, df], ignore_index=True)\n","\n","    except Exception as e:\n","\n","        # 發生錯誤時，列印錯誤訊息\n","        print(f'無法取得{date}的資料, 可能資料量不足.')\n","\n","\n","# 輸出前 5 筆資料\n","print(all_df)"],"metadata":{"id":"6CuKmRGELG9f","executionInfo":{"status":"ok","timestamp":1757774524269,"user_tz":-480,"elapsed":1126,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}},"outputId":"87db4620-a050-4d40-fd4a-84d038623f57","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["            日期 殖利率(%)  股利年度    本益比 股價淨值比  財報年/季\n","0   114年07月01日   1.57   113  21.49  6.16  114/1\n","1   114年07月02日   1.57   113  21.49  6.16  114/1\n","2   114年07月03日   1.56   113  21.59  6.19  114/1\n","3   114年07月04日   1.57   113  21.49  6.16  114/1\n","4   114年07月07日   1.57   113  21.39  6.14  114/1\n","5   114年07月08日   1.57   113  21.39  6.14  114/1\n","6   114年07月09日   1.56   113  21.59  6.19  114/1\n","7   114年07月10日   1.55   113  21.79  6.25  114/1\n","8   114年07月11日   1.55   113  21.79  6.25  114/1\n","9   114年07月14日   1.55   113  21.69  6.22  114/1\n","10  114年07月15日   1.53   113  21.98  6.31  114/1\n","11  114年07月16日   1.50   113  22.38  6.42  114/1\n","12  114年07月17日   1.50   113  22.38  6.42  114/1\n","13  114年07月18日   1.47   113  22.88  6.56  114/1\n","14  114年07月21日   1.48   113  22.78  6.53  114/1\n","15  114年07月22日   1.50   113  22.38  6.42  114/1\n","16  114年07月23日   1.48   113  22.68  6.51  114/1\n","17  114年07月24日   1.48   113  22.68  6.51  114/1\n","18  114年07月25日   1.48   113  22.68  6.51  114/1\n","19  114年07月28日   1.48   113  22.68  6.51  114/1\n","20  114年07月29日   1.50   113  22.48  6.45  114/1\n","21  114年07月30日   1.47   113  22.88  6.56  114/1\n","22  114年07月31日   1.47   113  22.97  6.59  114/1\n","23  114年08月01日   1.49   113  22.58  6.48  114/1\n","24  114年08月04日   1.50   113  22.48  6.45  114/1\n","25  114年08月05日   1.48   113  22.78  6.53  114/1\n","26  114年08月06日   1.51   113  22.28  6.39  114/1\n","27  114年08月07日   1.44   113  23.37  6.70  114/1\n","28  114年08月08日   1.45   113  23.27  6.68  114/1\n","29  114年08月11日   1.44   113  23.37  6.70  114/1\n","30  114年08月12日   1.44   113  23.37  6.70  114/1\n","31  114年08月13日   1.42   113  23.77  6.82  114/1\n","32  114年08月14日   1.45   113  20.87  6.65  114/2\n","33  114年08月15日   1.44   113  20.96  6.68  114/2\n","34  114年08月18日   1.44   113  20.96  6.68  114/2\n","35  114年08月19日   1.43   113  21.05  6.71  114/2\n","36  114年08月20日   1.50   113  20.16  6.43  114/2\n","37  114年08月21日   1.48   113  20.43  6.51  114/2\n","38  114年08月22日   1.50   113  20.16  6.43  114/2\n","39  114年08月25日   1.45   113  20.79  6.62  114/2\n","40  114年08月26日   1.45   113  20.87  6.65  114/2\n","41  114年08月27日   1.43   113  21.14  6.74  114/2\n","42  114年08月28日   1.47   113  20.61  6.57  114/2\n","43  114年08月29日   1.47   113  20.61  6.57  114/2\n","44  114年09月01日   1.46   113  20.70  6.59  114/2\n","45  114年09月02日   1.47   113  20.61  6.57  114/2\n","46  114年09月03日   1.47   113  20.61  6.57  114/2\n","47  114年09月04日   1.47   113  20.61  6.57  114/2\n","48  114年09月05日   1.44   113  20.96  6.68  114/2\n","49  114年09月08日   1.44   113  20.96  6.68  114/2\n","50  114年09月09日   1.42   113  21.32  6.79  114/2\n","51  114年09月10日   1.39   113  21.76  6.93  114/2\n","52  114年09月11日   1.37   113  22.03  7.02  114/2\n","53  114年09月12日   1.35   113  22.38  7.13  114/2\n"]}]},{"cell_type":"markdown","metadata":{"id":"PbF43XAN-8Kl"},"source":["## 使用 Yahoo Finance 取得資料"]},{"cell_type":"markdown","metadata":{"id":"Br05V_7Jmb-E"},"source":["###匯入套件"]},{"cell_type":"code","source":["!pip install yfinance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PbxbfMczBeLe","executionInfo":{"status":"ok","timestamp":1757774530413,"user_tz":-480,"elapsed":6146,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}},"outputId":"cc18a38c-bb39-415a-c948-0d5dfd2b62a5"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: yfinance in /usr/local/lib/python3.12/dist-packages (0.2.65)\n","Requirement already satisfied: pandas>=1.3.0 in /usr/local/lib/python3.12/dist-packages (from yfinance) (2.2.2)\n","Requirement already satisfied: numpy>=1.16.5 in /usr/local/lib/python3.12/dist-packages (from yfinance) (2.0.2)\n","Requirement already satisfied: requests>=2.31 in /usr/local/lib/python3.12/dist-packages (from yfinance) (2.32.4)\n","Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.12/dist-packages (from yfinance) (0.0.12)\n","Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.12/dist-packages (from yfinance) (4.4.0)\n","Requirement already satisfied: pytz>=2022.5 in /usr/local/lib/python3.12/dist-packages (from yfinance) (2025.2)\n","Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.12/dist-packages (from yfinance) (2.4.6)\n","Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.12/dist-packages (from yfinance) (3.18.2)\n","Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.12/dist-packages (from yfinance) (4.13.5)\n","Requirement already satisfied: curl_cffi>=0.7 in /usr/local/lib/python3.12/dist-packages (from yfinance) (0.13.0)\n","Requirement already satisfied: protobuf>=3.19.0 in /usr/local/lib/python3.12/dist-packages (from yfinance) (5.29.5)\n","Requirement already satisfied: websockets>=13.0 in /usr/local/lib/python3.12/dist-packages (from yfinance) (15.0.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.12/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.8)\n","Requirement already satisfied: typing-extensions>=4.0.0 in /usr/local/lib/python3.12/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (4.15.0)\n","Requirement already satisfied: cffi>=1.12.0 in /usr/local/lib/python3.12/dist-packages (from curl_cffi>=0.7->yfinance) (1.17.1)\n","Requirement already satisfied: certifi>=2024.2.2 in /usr/local/lib/python3.12/dist-packages (from curl_cffi>=0.7->yfinance) (2025.8.3)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.12/dist-packages (from pandas>=1.3.0->yfinance) (2.9.0.post0)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas>=1.3.0->yfinance) (2025.2)\n","Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests>=2.31->yfinance) (3.4.3)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests>=2.31->yfinance) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests>=2.31->yfinance) (2.5.0)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.12/dist-packages (from cffi>=1.12.0->curl_cffi>=0.7->yfinance) (2.22)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.8.2->pandas>=1.3.0->yfinance) (1.17.0)\n"]}]},{"cell_type":"code","execution_count":56,"metadata":{"id":"jdzBCH2fdi4i","executionInfo":{"status":"ok","timestamp":1757774530429,"user_tz":-480,"elapsed":14,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}}},"outputs":[],"source":["# yahoo finance 套件\n","import yfinance as yf\n","# 用來處理和分析結構化數據\n","import pandas as pd\n","\n","# 用來處理時間\n","import datetime as dt"]},{"cell_type":"code","execution_count":57,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":475},"executionInfo":{"elapsed":206,"status":"ok","timestamp":1757774530638,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"},"user_tz":-480},"id":"jjgcRa5vdrjy","outputId":"0fa3083d-f732-4daf-c1cb-9d6bc22aff62"},"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-2767916523.py:19: FutureWarning: YF.download() has changed argument auto_adjust default to True\n","  df = yf.download(stock_id, start=start, end=end).reset_index()\n","\r[*********************100%***********************]  1 of 1 completed\n"]},{"output_type":"execute_result","data":{"text/plain":["Price       Date       Close        High         Low        Open     Volume\n","0     2025-03-17  119.514961  122.874539  118.015150  122.724556  255501500\n","1     2025-03-18  115.415474  119.005018  114.525587  117.985150  299686900\n","2     2025-03-19  117.505203  120.434835  115.665439  117.255235  273426200\n","3     2025-03-20  118.515083  120.184871  116.455345  116.535337  248829700\n","4     2025-03-21  117.685188  117.975153  115.405476  116.925289  266498500\n","..           ...         ...         ...         ...         ...        ...\n","120   2025-09-08  168.300507  170.950366  167.340569  167.540555  163769100\n","121   2025-09-09  170.750366  170.970355  166.730604  169.080462  157548400\n","122   2025-09-10  177.320007  179.279888  175.460112  176.630044  226852000\n","123   2025-09-11  177.169998  180.279999  176.479996  179.679993  151159300\n","124   2025-09-12  177.820007  178.600006  176.449997  177.770004  124618700\n","\n","[125 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-7720194e-8384-4c60-9fdb-a960c3af6641\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Price</th>\n","      <th>Date</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2025-03-17</td>\n","      <td>119.514961</td>\n","      <td>122.874539</td>\n","      <td>118.015150</td>\n","      <td>122.724556</td>\n","      <td>255501500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2025-03-18</td>\n","      <td>115.415474</td>\n","      <td>119.005018</td>\n","      <td>114.525587</td>\n","      <td>117.985150</td>\n","      <td>299686900</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2025-03-19</td>\n","      <td>117.505203</td>\n","      <td>120.434835</td>\n","      <td>115.665439</td>\n","      <td>117.255235</td>\n","      <td>273426200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2025-03-20</td>\n","      <td>118.515083</td>\n","      <td>120.184871</td>\n","      <td>116.455345</td>\n","      <td>116.535337</td>\n","      <td>248829700</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2025-03-21</td>\n","      <td>117.685188</td>\n","      <td>117.975153</td>\n","      <td>115.405476</td>\n","      <td>116.925289</td>\n","      <td>266498500</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>120</th>\n","      <td>2025-09-08</td>\n","      <td>168.300507</td>\n","      <td>170.950366</td>\n","      <td>167.340569</td>\n","      <td>167.540555</td>\n","      <td>163769100</td>\n","    </tr>\n","    <tr>\n","      <th>121</th>\n","      <td>2025-09-09</td>\n","      <td>170.750366</td>\n","      <td>170.970355</td>\n","      <td>166.730604</td>\n","      <td>169.080462</td>\n","      <td>157548400</td>\n","    </tr>\n","    <tr>\n","      <th>122</th>\n","      <td>2025-09-10</td>\n","      <td>177.320007</td>\n","      <td>179.279888</td>\n","      <td>175.460112</td>\n","      <td>176.630044</td>\n","      <td>226852000</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>2025-09-11</td>\n","      <td>177.169998</td>\n","      <td>180.279999</td>\n","      <td>176.479996</td>\n","      <td>179.679993</td>\n","      <td>151159300</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>2025-09-12</td>\n","      <td>177.820007</td>\n","      <td>178.600006</td>\n","      <td>176.449997</td>\n","      <td>177.770004</td>\n","      <td>124618700</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>125 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7720194e-8384-4c60-9fdb-a960c3af6641')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7720194e-8384-4c60-9fdb-a960c3af6641 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7720194e-8384-4c60-9fdb-a960c3af6641');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6805d075-587d-485a-986c-24a981b4cd0c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6805d075-587d-485a-986c-24a981b4cd0c')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6805d075-587d-485a-986c-24a981b4cd0c button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_35fb5673-be82-48c0-af48-0282b9acae52\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_35fb5673-be82-48c0-af48-0282b9acae52 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 125,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-03-17 00:00:00\",\n        \"max\": \"2025-09-12 00:00:00\",\n        \"num_unique_values\": 125,\n        \"samples\": [\n          \"2025-04-10 00:00:00\",\n          \"2025-05-15 00:00:00\",\n          \"2025-05-07 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.95872446221591,\n        \"min\": 94.29813385009766,\n        \"max\": 183.14967346191406,\n        \"num_unique_values\": 124,\n        \"samples\": [\n          107.55646514892578,\n          134.8130340576172,\n          117.04527282714844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.750174387882865,\n        \"min\": 99.42749238220217,\n        \"max\": 184.46959107996432,\n        \"num_unique_values\": 125,\n        \"samples\": [\n          110.84605211383005,\n          136.28285028501523,\n          117.66519758488604\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.24454222592381,\n        \"min\": 86.60909899272106,\n        \"max\": 180.5798072904055,\n        \"num_unique_values\": 125,\n        \"samples\": [\n          99.13752639108027,\n          132.64330897356982,\n          112.2658753138673\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.2025866725607,\n        \"min\": 87.44898959160196,\n        \"max\": 182.94968779347354,\n        \"num_unique_values\": 125,\n        \"samples\": [\n          109.3562417228181,\n          134.27309347043854,\n          113.03578272910664\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87622008,\n        \"min\": 122316800,\n        \"max\": 612918300,\n        \"num_unique_values\": 125,\n        \"samples\": [\n          437812400,\n          226632600,\n          206758800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}],"source":["# 輸入股票代號\n","stock_id = \"NVDA\"\n","# stock_id = \"2357.tw\"\n","# stock_id = \"AAPL\"\n","\n","'''今天往前算幾天'''\n","# 資料結束時間\n","end = dt.date.today()\n","# 抓取半年資料（現在-過去180天）\n","start = end - dt.timedelta(days=180)\n","\n","'''抓取特定時間'''\n","# start = dt.datetime(2024, 1, 1)  # 指定的開始日期\n","# end = dt.datetime(2024, 6, 30)    # 指定的結束日期\n","\n","\n","# 參數1: 股票代號, 參數2: 開始時間, 參數3: 結束時間\n","df = yf.download(stock_id, start=start, end=end).reset_index()\n","\n","# 刪除 Ticker 欄位並取代\n","df.columns = df.columns.droplevel('Ticker')\n","\n","df"]},{"cell_type":"markdown","source":["# <b>資料可視化</b>"],"metadata":{"id":"sM8LQeAPBuQi"}},{"cell_type":"markdown","source":["## 可視化收盤價折線圖"],"metadata":{"id":"Wmda4HKzB8b9"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# 畫布尺寸大小設定\n","plt.figure(figsize=(12, 7))\n","\n","# 設定要繪製的資料欄位\n","plt.plot(df['Close'], label='Close')\n","\n","# 設定 x 軸的時間\n","num = 10\n","date = df[\"Date\"].dt.strftime('%Y-%m-%d')\n","plt.xticks(date[::len(date)//num].index,  # 設定在 x 軸上顯示標籤的位置（索引），這些位置間隔為 len(date)//num\n","           date[::len(date)//num],  # 設定顯示在 x 軸上的日期標籤，數量為 num，間隔為 len(date)//num\n","           rotation = 45) # 讓日期標籤旋轉 45 度，以避免標籤之間重疊，提高可讀性\n","\n","# 設定圖表的標題，x 軸和 y 軸的標籤\n","plt.title(f'{stock_id}')   # 將股票代號設為圖標\n","plt.xlabel('Date')         # x 軸標籤\n","plt.ylabel('Price')  # y 軸標籤\n","plt.legend(loc='upper left') # 在左上角顯示圖例\n","plt.grid(True) # 在圖上顯示網格\n","plt.tight_layout()  # 自動調整圖表中的間距，避免元素之間的重疊\n","\n","# 顯示圖表\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":668},"id":"YirqpzBN_eeO","executionInfo":{"status":"ok","timestamp":1757774530773,"user_tz":-480,"elapsed":132,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}},"outputId":"b4267ffa-dc00-41dd-d0f8-aa76ca6401f3"},"execution_count":58,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"KKfWgKeY_AQm"},"source":["## 用 BeautifulSoup4 取得 Yahoo 股市資料"]},{"cell_type":"markdown","source":["### ⚠️ 如果過度頻繁爬取證交所的資料(約連續50次)會被偵測並封鎖IP，可以搭配time、sleep延遲回應避免被認為是機器人程式。"],"metadata":{"id":"j_Rl6mICCP4q"}},{"cell_type":"markdown","metadata":{"id":"RfVbifTaYGHB"},"source":["###匯入套件"]},{"cell_type":"code","execution_count":59,"metadata":{"id":"NR40XO1P6GFJ","executionInfo":{"status":"ok","timestamp":1757774530793,"user_tz":-480,"elapsed":17,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}}},"outputs":[],"source":["# 用來處理時間\n","from datetime import datetime, timedelta\n","# 解析網頁內容\n","from bs4 import BeautifulSoup"]},{"cell_type":"markdown","metadata":{"id":"LIQJPxjJYS3J"},"source":["### 取得股價資料"]},{"cell_type":"code","execution_count":60,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"executionInfo":{"elapsed":719,"status":"ok","timestamp":1757774531514,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"},"user_tz":-480},"id":"OcIFDKjw__cH","outputId":"44892b02-0b62-4044-cfde-2e3563639b39"},"outputs":[{"output_type":"stream","name":"stdout","text":["正在爬取: https://tw.stock.yahoo.com/quote/NVDA\n","找不到時間資訊\n"]},{"output_type":"execute_result","data":{"text/plain":["     日期    股號      成交      開盤      最高      最低   一年內最高     買進 EPS (TTM)  \\\n","0  未知時間  NVDA  177.82  177.77  178.59  176.45  184.48  168.8      3.50   \n","\n","  PE Ratio     昨收     漲跌幅     漲跌    總量        一年內最低     賣出     總市值  \n","0    (TTM)  50.81  177.17  0.37%  0.65  121,530,793  86.62  178.11  "],"text/html":["\n","  <div id=\"df-8ed53284-3110-42ed-bb84-985ca049a5cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>日期</th>\n","      <th>股號</th>\n","      <th>成交</th>\n","      <th>開盤</th>\n","      <th>最高</th>\n","      <th>最低</th>\n","      <th>一年內最高</th>\n","      <th>買進</th>\n","      <th>EPS (TTM)</th>\n","      <th>PE Ratio</th>\n","      <th>昨收</th>\n","      <th>漲跌幅</th>\n","      <th>漲跌</th>\n","      <th>總量</th>\n","      <th>一年內最低</th>\n","      <th>賣出</th>\n","      <th>總市值</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>未知時間</td>\n","      <td>NVDA</td>\n","      <td>177.82</td>\n","      <td>177.77</td>\n","      <td>178.59</td>\n","      <td>176.45</td>\n","      <td>184.48</td>\n","      <td>168.8</td>\n","      <td>3.50</td>\n","      <td>(TTM)</td>\n","      <td>50.81</td>\n","      <td>177.17</td>\n","      <td>0.37%</td>\n","      <td>0.65</td>\n","      <td>121,530,793</td>\n","      <td>86.62</td>\n","      <td>178.11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ed53284-3110-42ed-bb84-985ca049a5cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8ed53284-3110-42ed-bb84-985ca049a5cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8ed53284-3110-42ed-bb84-985ca049a5cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"yahoo_stock(stock_id)\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"\\u65e5\\u671f\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u672a\\u77e5\\u6642\\u9593\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u80a1\\u865f\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"NVDA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6210\\u4ea4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"177.82\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u958b\\u76e4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"177.77\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6700\\u9ad8\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"178.59\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6700\\u4f4e\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"176.45\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u4e00\\u5e74\\u5167\\u6700\\u9ad8\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"184.48\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u8cb7\\u9032\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"168.8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EPS (TTM)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"3.50\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE Ratio\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"(TTM)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6628\\u6536\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"50.81\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6f32\\u8dcc\\u5e45\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"177.17\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u6f32\\u8dcc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0.37%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u7e3d\\u91cf\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0.65\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u4e00\\u5e74\\u5167\\u6700\\u4f4e\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"121,530,793\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u8ce3\\u51fa\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"86.62\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u7e3d\\u5e02\\u503c\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"178.11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}],"source":["def yahoo_stock(stock_id):\n","  # 判斷是台股還是美股，並構建正確的 URL\n","  if stock_id.isdigit() or stock_id.endswith('.TW'):\n","    # 台股處理\n","    if not stock_id.endswith('.TW'):\n","      stock_id_url = f\"{stock_id}.TW\"\n","    else:\n","      stock_id_url = stock_id\n","      url = f'https://tw.stock.yahoo.com/quote/{stock_id_url}'\n","  else:\n","    # 美股處理\n","    url = f'https://tw.stock.yahoo.com/quote/{stock_id}'\n","\n","  print(f\"正在爬取: {url}\")\n","\n","  # 添加 headers 避免被反爬蟲\n","  headers = {\n","    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n","  }\n","\n","  try:\n","    # 使用 requests 取得網頁內容\n","    response = requests.get(url, headers=headers)\n","    response.raise_for_status()  # 檢查 HTTP 錯誤\n","\n","    # 取得 HTML 文本\n","    html = response.content\n","\n","    # 使用 Beautiful Soup 解析 HTML 內容\n","    soup = BeautifulSoup(html, 'html.parser')\n","\n","    # 查找目標 section\n","    overview_section = soup.find('section', {'id': 'qsp-overview-realtime-info'})\n","\n","    if overview_section is None:\n","      print(\"找不到股票資訊區塊，可能是:\")\n","      print(\"1. 股票代號錯誤\")\n","      print(\"2. 網頁結構已改變\")\n","      print(\"3. 被反爬蟲機制阻擋\")\n","      return None\n","\n","    # 查找時間元素\n","    time_element = overview_section.find('time')\n","\n","    if time_element is None:\n","      print(\"找不到時間資訊\")\n","      current_time = \"未知時間\"\n","    else:\n","      # 修正拼字錯誤：datatime -> datetime\n","      current_time = time_element.get('datetime', time_element.text if time_element.text else \"未知時間\")\n","\n","    # 查找資料列表\n","    ul_element = overview_section.find('ul')\n","\n","    if ul_element is None:\n","      print(\"找不到資料列表\")\n","      return None\n","\n","    table_soups = ul_element.find_all('li')\n","\n","    if not table_soups:\n","      print(\"找不到資料項目\")\n","      return None\n","\n","    # 欄位資料和數據\n","    fields = []\n","    datas = []\n","\n","    # 使用 for 迴圈取得表格中細部內容\n","    for table_soup in table_soups:\n","      # 表格中的 span 標籤\n","      table_datas = table_soup.find_all('span')\n","\n","      for num, table_data in enumerate(table_datas):\n","        if table_data.text.strip() == '':  # 表格內容空就跳過\n","          continue\n","\n","        # 新增資料\n","        if num == 0:\n","          fields.append(table_data.text.strip())\n","        else:\n","          datas.append(table_data.text.strip())\n","\n","      # 檢查是否有資料\n","      if not fields or not datas:\n","        print(\"沒有找到有效的股票資料\")\n","        return None\n","\n","    # 確保欄位數和資料數相符\n","    min_length = min(len(fields), len(datas))\n","    fields = fields[:min_length]\n","    datas = datas[:min_length]\n","\n","    # 建立 DataFrame\n","    df = pd.DataFrame([datas], columns=fields)\n","\n","    # 增加日期和股號欄位\n","    df.insert(0, '日期', current_time)\n","    df.insert(1, '股號', stock_id)\n","\n","    return df\n","\n","  except requests.RequestException as e:\n","    print(f\"網路請求錯誤: {e}\")\n","    return None\n","  except Exception as e:\n","    print(f\"發生錯誤: {e}\")\n","    return None\n","\n","'''main'''\n","\n","# \"台積電\"股票代號\n","# stock_id = '2330'\n","# 美股-輝達\n","stock_id = 'NVDA'\n","\n","# 呼叫定義函數\n","yahoo_stock(stock_id)"]},{"cell_type":"markdown","metadata":{"id":"kfNUjnxkUuEf"},"source":["###取得季報表資訊\n"]},{"cell_type":"code","source":["url = f'https://tw.stock.yahoo.com/quote/{stock_id}/income-statement'\n","words = url.split('/')\n","print(words)\n","\n","k = words[-1]\n","print(k)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rd5MWijv-m9b","executionInfo":{"status":"ok","timestamp":1757774531542,"user_tz":-480,"elapsed":13,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"}},"outputId":"177d69e8-b67b-48c6-9429-e10c584f0d0c"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["['https:', '', 'tw.stock.yahoo.com', 'quote', 'NVDA', 'income-statement']\n","income-statement\n"]}]},{"cell_type":"code","execution_count":62,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1159,"status":"ok","timestamp":1757774532703,"user":{"displayName":"陳佳瑜","userId":"13865910506651706313"},"user_tz":-480},"id":"td2UQ2mXItl7","outputId":"289b046c-968c-4cbe-a231-574568b6bb3c"},"outputs":[{"output_type":"stream","name":"stdout","text":["      年度/季別        營業現金流         投資現金流         融資現金流        自由現金流  \\\n","0   2025 Q2  497,064,085  -228,488,307  -119,700,601  268,575,778   \n","1   2025 Q1  625,573,672  -290,192,426   -84,665,592  335,381,246   \n","2   2024 Q4  620,205,283  -311,918,527  -100,732,423  308,286,756   \n","3   2024 Q3  391,992,467  -195,509,921   -83,638,287  196,482,546   \n","4   2024 Q2  377,668,210  -197,607,330   -90,244,583  180,060,880   \n","5   2024 Q1  436,311,108  -159,806,991   -71,685,617  276,504,117   \n","6   2023 Q4  394,829,347  -132,319,502   -75,367,133  262,509,845   \n","7   2023 Q3  294,645,276  -242,243,223   -38,451,204   52,402,053   \n","8   2023 Q2  167,247,979  -259,326,076   -26,588,885  -92,078,097   \n","9   2023 Q1  385,244,745  -272,231,795   -64,487,030  113,012,950   \n","10  2022 Q4  486,881,904  -342,532,013   -69,831,545  144,349,891   \n","11  2022 Q3  412,698,167  -284,390,325  -130,406,753  128,307,842   \n","12  2022 Q2  338,849,429  -275,932,106    19,080,454   62,917,323   \n","13  2022 Q1  372,169,688  -288,073,791   -19,086,188   84,095,897   \n","14  2021 Q4  378,199,317  -245,343,292    82,284,018  132,856,025   \n","15  2021 Q3  318,706,207  -177,020,159   -35,324,719  141,686,048   \n","16  2021 Q2  187,439,492  -169,750,998    75,030,682   17,688,494   \n","17  2021 Q1  227,815,706  -244,251,414    14,618,457  -16,435,708   \n","18  2020 Q4  259,130,584   -90,958,613  -101,203,795  168,171,971   \n","19  2020 Q3  190,171,227   -96,079,669    47,434,066   94,091,558   \n","\n","            淨現金流  \n","0    -30,279,910  \n","1    267,177,207  \n","2    240,846,488  \n","3     87,653,204  \n","4    100,931,647  \n","5    232,767,951  \n","6    153,621,218  \n","7     35,082,551  \n","8   -108,508,826  \n","9     42,418,727  \n","10    46,801,299  \n","11    42,823,587  \n","12   101,599,551  \n","13    86,599,454  \n","14   211,178,226  \n","15   105,829,884  \n","16    83,254,225  \n","17     4,557,210  \n","18    55,975,534  \n","19   136,581,670  \n"]}],"source":["# 函數可用於奇摩財報\n","def url_find(url):\n","\n","    # 取得 url 的所有 route\n","    words = url.split('/')\n","\n","    # 取得最後一個 route\n","    # 為了知道是損益表、資產負債表、現金流量表\n","    laset_word = words[-1]\n","\n","    # 使用requests取得網頁內容\n","    response = requests.get(url)\n","\n","    # 取得 HTML 文本\n","    html = response.content\n","\n","    # 使用Beautiful Soup解析HTML內容\n","    soup = BeautifulSoup(html, 'html.parser')\n","\n","    # 找到表格的表頭 qsp-incom-statment-table\n","    table_soup = soup.find('section', {'id': 'qsp-{}-table'.format(laset_word)})\n","\n","    # 找到對應類別標籤\n","    table_fields=table_soup.find('div', class_='table-header')\n","\n","    # 解析表頭內容\n","    table_fields_lines = list(table_fields.stripped_strings)\n","\n","\n","    # 找到對應的資料\n","    data_rows = table_soup.find_all('li' ,class_='List(n)')\n","\n","    # 解析資料行內容\n","    data = []\n","    for row in data_rows:\n","        row_data = list(row.stripped_strings)\n","        data.append(row_data)\n","\n","    # 建立 DataFrame\n","    df = pd.DataFrame(data, columns=table_fields_lines)\n","    return df\n","\n","'''main'''\n","\n","# \"台積電\"股票代號\n","stock_id = '2330'\n","\n","# 抓損益表\n","# url = f'https://tw.stock.yahoo.com/quote/{stock_id}/income-statement'\n","# 抓資產負債表\n","# url = f'https://tw.stock.yahoo.com/quote/{stock_id}/balance-sheet'\n","# 抓現金流量表\n","url = f'https://tw.stock.yahoo.com/quote/{stock_id}/cash-flow-statement'\n","\n","# 抓取季報表資料\n","df = url_find(url).transpose()\n","\n","# 資料處理\n","df.columns = df.iloc[0]\n","df = df[1:]\n","df.insert(0, '年度/季別', df.index)\n","df.columns.name = None\n","df.reset_index(drop=True, inplace=True)\n","\n","# 輸出資料後5筆\n","print(df)"]}],"metadata":{"colab":{"provenance":[{"file_id":"1gzhJENnbIivoRq_XPAQYK7YmdxgCEytN","timestamp":1757770097444},{"file_id":"1Q6Y37lOm0yYVpk4Lb0tPK0jh6rKl1WR4","timestamp":1757395924249},{"file_id":"1aS0BNsD4Ax9n5OX_g_ROaf8QdSJxrsW7","timestamp":1726217950907},{"file_id":"159e8KXPYfx_vUia3sUC-k0QwDjYiBUl5","timestamp":1726196661767}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}